name: Tests (disabled)

on:
  workflow_dispatch:

env:
  NEO4J_URI: ${{ secrets.NEO4J_URI }}
  NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
  NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
  NEO4J_DATABASE: ${{ secrets.NEO4J_DATABASE }}

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install -r requirements.txt
      - name: Unit tests with coverage (exclude integration + torch-compat)
        run: |
          TEST_EXIT=0
          python -m coverage erase || true
          python -m coverage run -m pytest tests/ -q -k "not integration and not test_pytorch_api_compatibility" --disable-warnings --junitxml=pytest-report.xml | tee pytest-output.txt || TEST_EXIT=$?
          python -m coverage xml -o coverage.xml || true
          python -m coverage report -m || true
          echo "Listing workspace to show coverage.xml presence:" && ls -lah
          exit $TEST_EXIT
      - name: Locate coverage artifacts (debug)
        if: always()
        run: |
          echo "Searching for coverage files..."
          find . -maxdepth 4 \( -name "coverage.xml" -o -name ".coverage*" -o -name "*.coverage" \) -print -ls || true
          if [ -f pytest-report.xml ]; then echo "Found pytest-report.xml"; else echo "pytest-report.xml missing"; fi
      - name: Verify coverage report exists
        run: |
          ls -lh || true
          if [ ! -f coverage.xml ]; then echo "coverage.xml missing"; exit 1; fi
          head -n 5 coverage.xml || true
      - name: Upload coverage.xml as artifact (debug)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
      - name: Upload pytest JUnit report (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: pytest-report.xml
      - name: Upload pytest raw output (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-output
          path: pytest-output.txt
      # Intentionally no Codecov upload in this workflow to avoid double-counting

  integration:
    runs-on: ubuntu-latest
    needs: unit
    if: ${{ secrets.NEO4J_URI != '' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r config/requirements.txt
          pip install -r config/dev-requirements.txt
      - name: Run integration tests
        run: |
          pytest tests/ -v -m "integration"
